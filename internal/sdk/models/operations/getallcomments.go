// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy/terraform-provider-todoist/internal/sdk/models/shared"
	"net/http"
)

type GetAllCommentsRequest struct {
	// ID of the project used to filter comments. task_id or project_id required
	ProjectID *string `queryParam:"style=form,explode=true,name=project_id"`
	// ID of the task used to filter comments. task_id or project_id required
	TaskID *string `queryParam:"style=form,explode=true,name=task_id"`
}

func (o *GetAllCommentsRequest) GetProjectID() *string {
	if o == nil {
		return nil
	}
	return o.ProjectID
}

func (o *GetAllCommentsRequest) GetTaskID() *string {
	if o == nil {
		return nil
	}
	return o.TaskID
}

type GetAllCommentsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// List of all comments.
	Comments []shared.Comment
	// Unexpected error
	ErrorModel *shared.ErrorModel
}

func (o *GetAllCommentsResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetAllCommentsResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetAllCommentsResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetAllCommentsResponse) GetComments() []shared.Comment {
	if o == nil {
		return nil
	}
	return o.Comments
}

func (o *GetAllCommentsResponse) GetErrorModel() *shared.ErrorModel {
	if o == nil {
		return nil
	}
	return o.ErrorModel
}
