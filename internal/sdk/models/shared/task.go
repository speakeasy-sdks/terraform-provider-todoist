// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// TaskDue - Object representing task due date/time, or null if no date is set.
type TaskDue struct {
	DueObject *Due `json:"dueObject,omitempty"`
}

func (o *TaskDue) GetDueObject() *Due {
	if o == nil {
		return nil
	}
	return o.DueObject
}

// TaskDuration - Object representing a task's duration, including a positive integer for the amount of time and the unit of time (minute or day). The object will be null if the task has no duration.
type TaskDuration struct {
	DurationObject *Duration `json:"durationObject,omitempty"`
}

func (o *TaskDuration) GetDurationObject() *Duration {
	if o == nil {
		return nil
	}
	return o.DurationObject
}

type Task struct {
	// Task ID.
	ID *string `json:"id,omitempty"`
	// Task's project ID (read-only).
	ProjectID *string `json:"project_id,omitempty"`
	// ID of section task belongs to (read-only, will be null when the task has no parent section).
	SectionID *string `json:"section_id,omitempty"`
	// Task content. This value may contain markdown-formatted text and hyperlinks. Details on markdown support can be found in the Text Formatting article in the Help Center.
	Content *string `json:"content,omitempty"`
	// A description for the task. This value may contain markdown-formatted text and hyperlinks. Details on markdown support can be found in the Text Formatting article in the Help Center.
	Description *string `json:"description,omitempty"`
	// Flag to mark completed tasks.
	IsCompleted *bool    `json:"is_completed,omitempty"`
	Labels      []string `json:"labels,omitempty"`
	// ID of parent task (read-only, will be null for top-level tasks).
	ParentID *string `json:"parent_id,omitempty"`
	// Position under the same parent or project for top-level tasks (read-only).
	Order *int64 `json:"order,omitempty"`
	// Task priority from 1 (normal, default value) to 4 (urgent).
	Priority *int64 `json:"priority,omitempty"`
	// Object representing task due date/time, or null if no date is set.
	Due *TaskDue `json:"due,omitempty"`
	// URL to access this task in the Todoist web or mobile applications (read-only).
	URL *string `json:"url,omitempty"`
	// Number of task comments (read-only).
	CommentCount *int64 `json:"comment_count,omitempty"`
	// The date when the task was created (read-only).
	CreatedAt *string `json:"created_at,omitempty"`
	// The ID of the user who created the task (read-only).
	CreatorID *string `json:"creator_id,omitempty"`
	// The responsible user ID (will be null if the task is unassigned).
	AssigneeID *string `json:"assignee_id,omitempty"`
	// The ID of the user who assigned the task (read-only, will be null if the task is unassigned).
	AssignerID *string `json:"assigner_id,omitempty"`
	// Object representing a task's duration, including a positive integer for the amount of time and the unit of time (minute or day). The object will be null if the task has no duration.
	Duration *TaskDuration `json:"duration,omitempty"`
}

func (o *Task) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *Task) GetProjectID() *string {
	if o == nil {
		return nil
	}
	return o.ProjectID
}

func (o *Task) GetSectionID() *string {
	if o == nil {
		return nil
	}
	return o.SectionID
}

func (o *Task) GetContent() *string {
	if o == nil {
		return nil
	}
	return o.Content
}

func (o *Task) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *Task) GetIsCompleted() *bool {
	if o == nil {
		return nil
	}
	return o.IsCompleted
}

func (o *Task) GetLabels() []string {
	if o == nil {
		return nil
	}
	return o.Labels
}

func (o *Task) GetParentID() *string {
	if o == nil {
		return nil
	}
	return o.ParentID
}

func (o *Task) GetOrder() *int64 {
	if o == nil {
		return nil
	}
	return o.Order
}

func (o *Task) GetPriority() *int64 {
	if o == nil {
		return nil
	}
	return o.Priority
}

func (o *Task) GetDue() *TaskDue {
	if o == nil {
		return nil
	}
	return o.Due
}

func (o *Task) GetURL() *string {
	if o == nil {
		return nil
	}
	return o.URL
}

func (o *Task) GetCommentCount() *int64 {
	if o == nil {
		return nil
	}
	return o.CommentCount
}

func (o *Task) GetCreatedAt() *string {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *Task) GetCreatorID() *string {
	if o == nil {
		return nil
	}
	return o.CreatorID
}

func (o *Task) GetAssigneeID() *string {
	if o == nil {
		return nil
	}
	return o.AssigneeID
}

func (o *Task) GetAssignerID() *string {
	if o == nil {
		return nil
	}
	return o.AssignerID
}

func (o *Task) GetDuration() *TaskDuration {
	if o == nil {
		return nil
	}
	return o.Duration
}
